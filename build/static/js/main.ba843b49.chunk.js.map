{"version":3,"sources":["components/MovieCard/index.js","context/SearchMoviesContext.js","components/Navbar/index.js","components/Pagination/index.js","components/Popular/index.js","components/TopRated/index.js","components/Upcoming/index.js","components/SearchQuery/index.js","App.js","index.js"],"names":["MovieCard","props","movieDetails","id","title","posterPath","voteAverage","_jsxs","className","children","_jsx","alt","src","Link","to","concat","type","SearchMoviesContext","createContext","searchResponse","onTriggerSearchingQuery","withRouter","Consumer","value","onChangeSearchInput","searchInput","onChange","event","target","placeholder","onClick","preventDefault","history","push","Pagination","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","pageNo","onNextPage","_this$props","apiCallback","totalPages","setState","prevState","onPrevPage","_createClass","key","this","disabled","React","Component","Popular","isLoading","popularMovieResponse","getUpdatedData","responseData","total_pages","totalResults","total_results","results","map","eachMovie","poster_path","vote_average","getPopularMoviesResponse","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","apiUrl","response","data","newData","_args","wrap","_context","prev","next","undefined","fetch","sent","json","stop","renderLoadingView","Loader","color","renderPopularMoviesList","movie","_this$state","_Fragment","Navbar","TopRated","topRatedMovieResponse","getTopRatedMoviesResponse","Upcoming","upcomingMovieResponse","getUpcomingMoviesResponse","SearchQuery","renderEmptyView","renderSearchResultViews","apiStatus","renderMoviesList","NavBar","App","_useState","useState","_useState2","_slicedToArray","setSearchResponse","_useState3","_useState4","setApiStatus","_useState5","_useState6","setSearchInput","_ref","Provider","text","Switch","Route","exact","path","component","ReactDOM","render","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.ba843b49.chunk.js","sourcesContent":["import {Link} from 'react-router-dom'\nimport './index.css'\n\nconst MovieCard = props => {\n  const {movieDetails} = props\n  const {id, title, posterPath, voteAverage} = movieDetails\n\n  return (\n    <li className=\"movie-card-container col-12 col-sm-6 col-lg-2 mb-3 d-flex flex-column\">\n      <img className=\"movie-card-image\" alt={title} src={posterPath} />\n      <div className=\"d-flex flex-column align-items-center mt-2\">\n        <h1 className=\"movie-title m-0\">{title}</h1>\n        <p className=\"movie-rating mb-0 ms-1\">Rating: {voteAverage}</p>\n      </div>\n      <Link to={`/movie/${id}`} className=\"mt-auto align-self-center\">\n        <button className=\"btn btn-outline-success\" type=\"button\">\n          View Details\n        </button>\n      </Link>\n    </li>\n  )\n}\n\nexport default MovieCard\n","import {createContext} from 'react'\n\nconst SearchMoviesContext = createContext({\n  searchResponse: {},\n  onTriggerSearchingQuery: () => {},\n})\n\nexport default SearchMoviesContext\n","import {Link, withRouter} from 'react-router-dom'\nimport SearchMoviesContext from '../../context/SearchMoviesContext'\nimport './index.css'\n\nconst Navbar = props => {\n  const renderSearchBar = () => (\n    <SearchMoviesContext.Consumer>\n      {value => {\n        const {\n          onTriggerSearchingQuery,\n          onChangeSearchInput,\n          searchInput,\n          // apiStatus,\n        } = value\n\n        const onChangeHandler = event => onChangeSearchInput(event.target.value)\n\n        const onSearchHandler = event => {\n          event.preventDefault()\n          const {history} = props\n          onTriggerSearchingQuery()\n          history.push(`/search`)\n        }\n\n        return (\n          <div className=\"d-flex align-items-center\">\n            <input\n              type=\"text\"\n              className=\"me-2 search-input\"\n              onChange={onChangeHandler}\n              value={searchInput}\n              placeholder=\"Search\"\n            />\n            <button\n              className=\"btn btn-outline-info\"\n              type=\"button\"\n              onClick={onSearchHandler}\n            >\n              Search\n            </button>\n          </div>\n        )\n      }}\n    </SearchMoviesContext.Consumer>\n  )\n\n  return (\n    <nav className=\"navbar-container d-flex align-items-center p-3\">\n      <div className=\"logo-container\">\n        <h1 className=\"page-logo\">movieDB</h1>\n      </div>\n      <div className=\"ms-auto d-flex align-items-center\">\n        <ul className=\"order-1 d-flex align-items-center p-0 mb-0 ms-3 nav-items-list\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\">\n              Popular\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/top-rated\">\n              Top Rated\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/upcoming\">\n              Upcoming\n            </Link>\n          </li>\n        </ul>\n        {renderSearchBar()}\n      </div>\n    </nav>\n  )\n}\n\nexport default withRouter(Navbar)\n","import React from 'react'\nimport './index.css'\n\nclass Pagination extends React.Component {\n  state = {\n    pageNo: 1,\n  }\n\n  onNextPage = () => {\n    const {apiCallback, totalPages} = this.props\n    this.setState(\n      prevState => {\n        if (prevState.pageNo < totalPages) {\n          return {\n            pageNo: prevState.pageNo + 1,\n          }\n        }\n        return prevState\n      },\n      () => {\n        const {pageNo} = this.state\n        apiCallback(pageNo)\n      },\n    )\n  }\n\n  onPrevPage = () => {\n    const {apiCallback} = this.props\n    this.setState(\n      prevState => {\n        if (prevState.pageNo > 1) {\n          return {\n            pageNo: prevState.pageNo - 1,\n          }\n        }\n        return prevState\n      },\n      () => {\n        const {pageNo} = this.state\n        apiCallback(pageNo)\n      },\n    )\n  }\n\n  render() {\n    const {pageNo} = this.state\n    const {totalPages} = this.props\n\n    return (\n      <div className=\"mb-3 d-flex justify-content-center align-items-center\">\n        <button\n          type=\"button\"\n          className=\"control-btn\"\n          onClick={this.onPrevPage}\n          disabled={pageNo === 1}\n        >\n          Prev\n        </button>\n        <p className=\"page-no\">{pageNo}</p>\n        <button\n          type=\"button\"\n          className=\"control-btn\"\n          onClick={this.onNextPage}\n          disabled={pageNo === totalPages}\n        >\n          Next\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\n\nimport MovieCard from '../MovieCard'\nimport Navbar from '../Navbar'\nimport Pagination from '../Pagination'\n\nimport './index.css'\n\nclass Popular extends React.Component {\n  state = {\n    isLoading: true,\n    popularMovieResponse: {},\n  }\n\n  componentDidMount() {\n    this.getPopularMoviesResponse()\n  }\n\n  getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  getPopularMoviesResponse = async (page = 1) => {\n    const API_KEY = '5fa2b8a3aa985d418a129af9b8239e00'\n    const apiUrl = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=${page}`\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    const newData = this.getUpdatedData(data)\n    this.setState({isLoading: false, popularMovieResponse: newData})\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  renderPopularMoviesList = () => {\n    const {popularMovieResponse} = this.state\n    const {results} = popularMovieResponse\n\n    return (\n      <ul className=\"row p-0 ms-0 me-0 mt-3\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} movieDetails={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {isLoading, popularMovieResponse} = this.state\n\n    return (\n      <>\n        <Navbar />\n        <div className=\"route-page-body\">\n          {isLoading\n            ? this.renderLoadingView()\n            : this.renderPopularMoviesList()}\n        </div>\n        <Pagination\n          totalPages={popularMovieResponse.totalPages}\n          apiCallback={this.getPopularMoviesResponse}\n        />\n      </>\n    )\n  }\n}\n\nexport default Popular\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\nimport MovieCard from '../MovieCard'\nimport Navbar from '../Navbar'\nimport Pagination from '../Pagination'\n\nimport './index.css'\n\nclass TopRated extends React.Component {\n  state = {\n    isLoading: true,\n    topRatedMovieResponse: {},\n  }\n\n  componentDidMount() {\n    this.getTopRatedMoviesResponse()\n  }\n\n  getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  getTopRatedMoviesResponse = async (page = 1) => {\n    const API_KEY = '5fa2b8a3aa985d418a129af9b8239e00'\n    const apiUrl = `https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}&language=en-US&page=${page}`\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    const newData = this.getUpdatedData(data)\n    this.setState({isLoading: false, topRatedMovieResponse: newData})\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  renderPopularMoviesList = () => {\n    const {topRatedMovieResponse} = this.state\n    const {results} = topRatedMovieResponse\n\n    return (\n      <ul className=\"row p-0 ms-0 me-0 mt-3\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} movieDetails={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {isLoading, topRatedMovieResponse} = this.state\n\n    return (\n      <>\n        {' '}\n        <Navbar />\n        <div className=\"route-page-body\">\n          {isLoading\n            ? this.renderLoadingView()\n            : this.renderPopularMoviesList()}\n        </div>\n        <Pagination\n          totalPages={topRatedMovieResponse.totalPages}\n          apiCallback={this.getTopRatedMoviesResponse}\n        />\n      </>\n    )\n  }\n}\n\nexport default TopRated\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\nimport MovieCard from '../MovieCard'\nimport Navbar from '../Navbar'\nimport Pagination from '../Pagination'\n\nimport './index.css'\n\nclass Upcoming extends React.Component {\n  state = {\n    isLoading: true,\n    upcomingMovieResponse: {},\n  }\n\n  componentDidMount() {\n    this.getUpcomingMoviesResponse()\n  }\n\n  getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  getUpcomingMoviesResponse = async (page = 1) => {\n    const API_KEY = '5fa2b8a3aa985d418a129af9b8239e00'\n    const apiUrl = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${page}`\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    const newData = this.getUpdatedData(data)\n    this.setState({isLoading: false, upcomingMovieResponse: newData})\n  }\n\n  renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  renderPopularMoviesList = () => {\n    const {upcomingMovieResponse} = this.state\n    const {results} = upcomingMovieResponse\n\n    return (\n      <ul className=\"row p-0 ms-0 me-0 mt-3\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} movieDetails={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  render() {\n    const {isLoading, upcomingMovieResponse} = this.state\n\n    return (\n      <>\n        <Navbar />\n        <div className=\"route-page-body\">\n          {isLoading\n            ? this.renderLoadingView()\n            : this.renderPopularMoviesList()}\n        </div>\n        <Pagination\n          totalPages={upcomingMovieResponse.totalPages}\n          apiCallback={this.getUpcomingMoviesResponse}\n        />\n      </>\n    )\n  }\n}\n\nexport default Upcoming\n","import Loader from 'react-loader-spinner'\n\nimport MovieCard from '../MovieCard'\nimport NavBar from '../Navbar'\nimport Pagination from '../Pagination'\n\nimport SearchMoviesContext from '../../context/SearchMoviesContext'\n\nimport './index.css'\n\nconst SearchQuery = () => {\n  const renderEmptyView = () => (\n    <div className=\"empty-view-container\">\n      <h1>No results found.</h1>\n      <p>Don not get worried, Try to search again.</p>\n    </div>\n  )\n\n  const renderMoviesList = searchResponse => {\n    const {results} = searchResponse\n\n    if (!results.length) {\n      return renderEmptyView()\n    }\n    return (\n      <ul className=\"row p-0 ms-0 me-0 mt-3\">\n        {results.map(movie => (\n          <MovieCard key={movie.id} movieDetails={movie} />\n        ))}\n      </ul>\n    )\n  }\n\n  const renderLoadingView = () => (\n    <div className=\"loader-container\">\n      <Loader type=\"TailSpin\" color=\"#032541\" />\n    </div>\n  )\n\n  const renderSearchResultViews = value => {\n    const {searchResponse, apiStatus} = value\n\n    switch (apiStatus) {\n      case 'IN_PROGRESS':\n        return renderLoadingView()\n      case 'SUCCESS':\n        return renderMoviesList(searchResponse)\n      default:\n        return renderEmptyView()\n    }\n  }\n\n  return (\n    <SearchMoviesContext.Consumer>\n      {value => {\n        const {searchResponse, onTriggerSearchingQuery} = value\n\n        return (\n          <>\n            <NavBar />\n            <div className=\"route-page-body\">\n              {renderSearchResultViews(value)}\n            </div>\n            <Pagination\n              totalPages={searchResponse.totalPages}\n              apiCallback={onTriggerSearchingQuery}\n            />\n          </>\n        )\n      }}\n    </SearchMoviesContext.Consumer>\n  )\n}\n\nexport default SearchQuery\n","import {useState} from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport Popular from './components/Popular'\nimport TopRated from './components/TopRated'\nimport Upcoming from './components/Upcoming'\nimport SearchQuery from './components/SearchQuery'\n\nimport SearchMoviesContext from './context/SearchMoviesContext'\n\nimport './App.css'\n\nconst API_KEY = '5fa2b8a3aa985d418a129af9b8239e00'\n\nconst App = () => {\n  const [searchResponse, setSearchResponse] = useState({})\n  const [apiStatus, setApiStatus] = useState('INITIAL')\n  const [searchInput, setSearchInput] = useState('')\n\n  const onChangeSearchInput = text => setSearchInput(text)\n\n  const getUpdatedData = responseData => ({\n    totalPages: responseData.total_pages,\n    totalResults: responseData.total_results,\n    results: responseData.results.map(eachMovie => ({\n      id: eachMovie.id,\n      posterPath: `https://image.tmdb.org/t/p/w500${eachMovie.poster_path}`,\n      voteAverage: eachMovie.vote_average,\n      title: eachMovie.title,\n    })),\n  })\n\n  const onTriggerSearchingQuery = async (page = 1) => {\n    setApiStatus('IN_PROGRESS')\n    const apiUrl = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchInput}&page=${page}`\n\n    const response = await fetch(apiUrl)\n    const data = await response.json()\n    setSearchResponse(getUpdatedData(data))\n    setApiStatus('SUCCESS')\n  }\n\n  return (\n    <SearchMoviesContext.Provider\n      value={{\n        searchResponse,\n        apiStatus,\n        onTriggerSearchingQuery,\n        searchInput,\n        onChangeSearchInput,\n      }}\n    >\n      <div className=\"App d-flex flex-column\">\n        <Switch>\n          <Route exact path=\"/\" component={Popular} />\n          <Route exact path=\"/top-rated\" component={TopRated} />\n          <Route exact path=\"/upcoming\" component={Upcoming} />\n          <Route exact path=\"/search\" component={SearchQuery} />\n        </Switch>\n      </div>\n    </SearchMoviesContext.Provider>\n  )\n}\n\nexport default App\n","import {BrowserRouter} from 'react-router-dom'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}